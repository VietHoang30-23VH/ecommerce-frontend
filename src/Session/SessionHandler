import React, { useEffect, useState } from 'react';
import { useNavigate } from 'react-router-dom';
import Cookies from 'js-cookie';
import { api } from '../API/ApiClient'; // Adjust the path as needed

const SessionHandler = ({ children }) => {
    const [isSessionExpired, setIsSessionExpired] = useState(false);
    const navigate = useNavigate();

    useEffect(() => {
        if (isSessionExpired) {
            alert('Your session has expired. Please log in again.');
            navigate('/login');
        }
    }, [isSessionExpired, navigate]);

    api.interceptors.response.use(
        response => response,
        error => {
            if (error.response && error.response.status === 401) {
                setIsSessionExpired(true);
                Cookies.remove('jwt'); // Remove JWT from cookie if needed
            }
            return Promise.reject(error);
        }
    );

    return children;
};

export default SessionHandler;

